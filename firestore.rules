rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // User Profiles: Allow users to create their profile and then only read/update their own.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Announcements: Allow any authenticated user to read, but only privileged users to write.
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isPrivileged == true;
    }
    
    // Notes: Allow any authenticated user to read, but only privileged users to write.
    match /notes/{noteId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isPrivileged ==.isPrivileged == true;
    }

    // Tasks: Users can only read and write to their own tasks subcollection.
    match /users/{userId}/tasks/{taskId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Exams: This is the key rule for the class average feature.
    match /users/{userId}/exams/{examId} {
        // Any authenticated user can READ any exam record.
        // This is required for calculating the class average across all students.
        allow read: if request.auth != null;
        
        // Only the user who owns the document can WRITE (create, update, delete) it.
        allow write: if request.auth.uid == userId;
    }
  }
}
