
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Privileged users check
    function isPrivileged() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isPrivileged == true;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // User profiles
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    
    // Tasks are private to each user
    match /users/{userId}/tasks/{taskId} {
      allow read, write, delete: if request.auth.uid == userId;
    }

    // Exams can be listed by anyone for class average, but only modified by the owner
    match /users/{userId}/exams/{examId} {
      allow get, create, update, delete: if request.auth.uid == userId;
      allow list: if request.auth != null;
    }

    // Announcements can be read by anyone, but only written by privileged users
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if isPrivileged();
    }

    // Notes can be read by anyone, but only written by privileged users
    match /notes/{noteId} {
      allow read: if request.auth != null;
      allow write: if isPrivileged();
    }
  }
}
