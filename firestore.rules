rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for top-level collections
    match /users/{userId} {
      // User profile documents
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;

      // Rules for user sub-collections
      
      // Tasks can only be accessed by the user who owns them.
      match /tasks/{taskId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Exams can be written only by the owner, but READ by any authenticated
      // user. This is REQUIRED for the collectionGroup query that calculates
      // the class average across all students.
      match /exams/{examId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId; // Covers create, update, delete
      }
    }

    // Announcements can be read by any authenticated user,
    // but only written by a privileged user.
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isPrivileged == true;
    }

    // Notes can be read by any authenticated user,
    // but only written by a privileged user.
    match /notes/{noteId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isPrivileged == true;
    }
  }
}
